


<html>
<head>
<title>IGI Individual Record</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="HELP" content="Search/Ancestors/igirecord.asp">
<link rel="stylesheet" type="text/css" href="/eng/includes/chartStyles.css">
<style type="text/css">
<!--
.pedigreeLink,.pedigreeLinkFemale,.pedigreeLinkMale,.familyGroupLink,.detailsLink{
	display:block;
	margin-right:30px;
	text-align:left;
	width:100px;
}
-->
</style>
<link rel='stylesheet' type='text/css' href='../../includes/FS_Styles2005_ie.css' title='FS_Styles2005'>
<script Language='JavaScript'>
<!--
function Translate(str){
return str;
}
//-->
</script>
<script>
sThisLDS = "1";
nThisLDS = parseInt(sThisLDS);
</script>
<script>
//-------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------
//					Cookie Class
//-------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------
function Cookie(cookieName)//this acts like a cookie object. 
{
	this.name = cookieName;
	this.nameLength = this.name.length + 1;
	this.setCookie = setCookie;
	this.getCookieStr = getCookieStr;
	this.getKeyStr = getKeyStr;
	this.getCookieNameIndex = getCookieNameIndex;
	this.getSemiColonIndex = getSemiColonIndex;
	this.setCookieKey = setCookieKey;
	this.getCookieStrWithoutKey = getCookieStrWithoutKey;
	this.getKeyIndex = getKeyIndex;
	this.getKeyDelimIndex = getKeyDelimIndex;
	this.resetCookie = resetCookie;			
	this.setSubKey = setSubKey;
	this.getSubKey = getSubKey;
	this.doesKeyExist = doesKeyExist;
	this.removeKey = removeKey;
	this.keyDelim = "&";
	this.subKeyDelim = "/";
	this.setPath = setPath;
//alert("cookieClass(): Setting up cookie");
//	this.addToKey = addToKey;
}//end function cookie

//--------------------------------------------------------------------------------
/*				function getSubKey()
Purpose:	To return the string of the sub key. The string should not have anypart
			of the subkey in it. subkeys are delimated by '/'. So for a person's
			last name and value of smith, the cookie would have /ln=smith. In this
			case, only the smith should be returned. 
needs:		sKey_gsk = the key name
			sSubKey_gsk = the subkey name
returns:	The subkey's string. Only the string.
notes:
*/
//--------------------------------------------------------------------------------
function getSubKey(sKey_gsk,sSubKey_gsk)
{
	var sKey_gsk = this.getKeyStr(sKey_gsk);//get the string in the current key
	if (sKey_gsk!="")//if the key does exist
	{
		var nSubIndex = sKey_gsk.indexOf("/" + sSubKey_gsk + "=");//get the index of the subkey
		if (nSubIndex > -1)//only pass the subkey if it exists in the key
		{
			nSubIndex += sSubKey_gsk.length + 2;//add the length + 2(for '/' & '=') so only the value is returned
			var nUse = sKey_gsk.length;//nUse will be the ending index. default to the end of the string
			var nSlash = sKey_gsk.indexOf("/",nSubIndex);//get the index of the next slash, after the subkey index
			var nKeyDelim = sKey_gsk.indexOf(this.keyDelim,nSubIndex);//get the index of the next key Delimiter, after the subkey index
			var nSemiColonIndex= sKey_gsk.indexOf(";",nSubIndex);//get the index of the next semicolon, after the subkey index
			if (nSlash>-1 && nSlash<nUse)
				nUse = nSlash;//if the slash index is less than the current index to use, use it
			if (nKeyDelim > -1 && nKeyDelim<nUse)
				nUse = nKeyDelim;//if the keydelim index is less than the current index to use, use it
			if (nSemiColonIndex >-1 && nSemiColonIndex<nUse)
				nUse = nSemiColonIndex;//if the semicolon index is less than the current index to use, use it

			return sKey_gsk.substring(nSubIndex,nUse);//return the substring
		}
		else
			return ""; //if the subkey is not in the key, then return empty string
	}
	else
	{
		return "";//return an empty string
	}
}

//--------------------------------------------------------------------------------
/*          function getStringLess()
Purpose:	To remove a section from a string, concat the rest, and return the new string
			ex. if the string is 'todd kyle john' and the start indexstring is 0
			and the end of the first is 4 and the start of second is 9 and the 
			end of the second is 13 this function should return 'todd john'.			
needs:		sStr_gsl = the main string. from ex. 'todd kyle john' (string)
			nFStart_gsl = the start of the first piece wanted (int)
			nFEnd_gsl = the end of the first piece wanted (int)
			nSStart_gsl = the start of the second piece wanted (int)
			nSEnd_gsl =	the end of the second piece wanted (int)
returns:	a string
notes:		
*/
//--------------------------------------------------------------------------------
function getStringLess(sStr_gsl,nFStart_gsl,nFEnd_gsl,nSStart_gsl,nSEnd_gsl)
{
	return sStr_gsl.substring(nFStart_gsl,nFEnd_gsl) + sStr_gsl.substring(nSStart_gsl,nSEnd_gsl)
}

//--------------------------------------------------------------------------------
/*          function setSubKey()
Purpose:	To set a cookie with a specific subkey. If you want to set a subkey of
			'fn' for the key of 'searchresulsts' in the cookie 'search' and the 
			value to set is 'david' then the cookie should look like this when
			finish... 'search=&searchresulsts=/fn=david;'
			If there was already a value in this key, then it should not be lost.
			ex. if the key 'searchresultsts' already had the value '/ln=smith', 
			then the new key (if using the example above) would look like...
			'search=&searchresultsts=/ln=smith/fn=david;'
needs:		sKey_ssk = the name of the key
			sSubKey_ssk = the name of the subkey
			sValue_ssk = the value for the subkey
returns:	nothing
notes:		
*/
//--------------------------------------------------------------------------------
function setSubKey(sKey_ssk,sSubKey_ssk,sValue_ssk)
{
	var sNewString = "";
	sSubKey_ssk = this.subKeyDelim + sSubKey_ssk + "=";//add subkey delim and '=' to the subkey. see business rules.
	var sKeyString_ssk = this.getKeyStr(sKey_ssk); //get key
	if (sKeyString_ssk.toUpperCase().indexOf(sSubKey_ssk.toUpperCase()) > -1) //if this subkey already set
	{
		var nStart = sKeyString_ssk.toUpperCase().indexOf(sSubKey_ssk.toUpperCase());
		var nUse = sKeyString_ssk.length;
		var nSlash = sKeyString_ssk.indexOf(this.subKeyDelim,nStart);
		var nKeyDelim = sKeyString_ssk.indexOf(this.keyDelim,nStart);
		var nSemiColonIndex = sKeyString_ssk.indexOf(";",nStart);
		if (nSlash>-1 && nSlash < nUse)
			nUse = nSlash;
		if (nKeyDelim>-1 && nKeyDelim < nUse)
			nUse = nKeyDelim;
		if (nSemiColonIndex>-1 && nSemiColonIndex < nUse)
			nUse = nSemiColonIndex;
		if (nUse == sKeyString_ssk.length)
		{
			sNewString += sKeyString_ssk;
		}
		else
			sNewString = this.getStringLess(sKeyString_ssk, 0, nStart, nUse, sKeyString_ssk.length)//get key without this value
	}
	else 
		sNewString += sKeyString_ssk;

	this.setCookieKey(sKey_ssk,sNewString + sSubKey_ssk + sValue_ssk);
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	To return a cookie's string
needs:		nothing
returns:	The cookie string
notes:		
*/
//--------------------------------------------------------------------------------
function getCookieStr()
{
	var sTmpCookie = unescape(document.cookie);
	var nTmpCookieIndex = this.getCookieNameIndex();
	if (nTmpCookieIndex == -1)
		return "";
	else
		return sTmpCookie.substring(nTmpCookieIndex,this.getSemiColonIndex(nTmpCookieIndex));
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	To return the index for the next semicolon after a specific 
			starting point of a string. Basically, it will find the end of 
			the cookie.
needs:		nCookIndex_gsc = the index of the string to start parsing
returns:	integer corresponding the semicolon's location
			-1 if nBeginningIndex is -1
			-1 if a semicolon is not found
notes:		
*/
//--------------------------------------------------------------------------------
function getSemiColonIndex(nCookIndex_gsc)
{
	//if the cookie name was not in the cookie, there is no reason to return the end of it.
	var sTmpCookie = unescape(document.cookie);
	if (nCookIndex_gsc == -1)
		return -1;
	else 
	{
		nIndex_gsc = sTmpCookie.indexOf(";",nCookIndex_gsc);
		if (nIndex_gsc == -1)
			return sTmpCookie.length;
		else
			return nIndex_gsc;
	}
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	To return the index for the start of a cookie string. 
			It should return the start of the cookie string, not the
			cookie name and the "=".
needs:		nothing
returns:	integer
			-1 if cookie does not exist
notes:		
*/
//--------------------------------------------------------------------------------
function getCookieNameIndex()
{
	var sTmpCookie = unescape(document.cookie);
	var nIndex_gcni = sTmpCookie.toUpperCase().indexOf(this.name.toUpperCase() + "=");
	if (nIndex_gcni == -1)
		return nIndex_gcni
	else
		return nIndex_gcni + this.nameLength;
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	To set the cookie
needs:		sValue= string holding the value of the cookie
returns:	nothing
notes:		
*/
//--------------------------------------------------------------------------------
function setCookie(sValue)
{
	document.cookie = this.name + "=" + escape(sValue) + ";path=/";
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	To add a key and it's value to the cookie
needs:		sKey= string holding the key's name
			sValue= string holding the key's string
returns:	nothing.
notes:		
*/
//--------------------------------------------------------------------------------
function setCookieKey(sKey,sValue)
{
//alert("setCookieKey(): Start Function");
	var nKeyIndex = -1;
	var sNewValue = "";
	var sTmpCookie_sck = this.getCookieStr();
	var nIndexToUse = sTmpCookie_sck.length;//call to getCookieStrWithourKey should go to the end unless stated below
	if (sTmpCookie_sck !="") 
	{
		nKeyIndex = this.getKeyIndex(sKey,false);//check to see if the key exists
		if (nKeyIndex > -1)//key does exist
		{
			var nKeyDelimIndex = sTmpCookie_sck.indexOf(this.keyDelim,this.getKeyIndex(sKey,true));
			var nSemiColonIndex = sTmpCookie_sck.indexOf(";",this.getKeyIndex(sKey,true));
			if (nKeyDelimIndex > -1 && nKeyDelimIndex < nIndexToUse)			//if & exists
				nIndexToUse = nKeyDelimIndex;
			if (nSemiColonIndex > -1 && nSemiColonIndex < nIndexToUse)			//if & exists
				nIndexToUse = nSemiColonIndex;
		}
		else
			nKeyIndex = nIndexToUse;
		sNewValue = this.getCookieStrWithoutKey(nKeyIndex,nIndexToUse);//remove key value from cookie
	}
	sNewValue += this.keyDelim + sKey + "=" + sValue;  //redo cookie with new value
//alert("setCookieKey(): sNewValue="+sNewValue)	
	this.setCookie(sNewValue);
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	to get a specific's key's string
needs:		sKey_gks= string holding the key
returns:	string holding the key's string without the key name
notes:		
*/
//--------------------------------------------------------------------------------
function getKeyStr(sKey_gks)
{
	var nKeyDelimIndex = -1;
	var nIndexToUse = this.getCookieStr().length;//call to getCookieStrWithourKey should go to the end unless stated below
	var nKeyIndex = this.getKeyIndex(sKey_gks,true);//check to see if the key exists
	if (nKeyIndex > -1)//key does exist
	{
		nKeyDelimIndex = this.getKeyDelimIndex(nKeyIndex);
		if (nKeyDelimIndex > -1)			//if & exists
			nIndexToUse = nKeyDelimIndex;
		return this.getCookieStr().substring(nKeyIndex,nIndexToUse);
	}
	else
		return "";
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	To return the cookie's string without the key string. This is incase other
			keys exist.
needs:		nStartingIndex= number representing the index of where to key starts
			nEndIndex= number representing the index of where the key ends
returns:	string holding the value of the cookie without the key's string
notes:		
*/
//--------------------------------------------------------------------------------
function getCookieStrWithoutKey(nStartIndex,nEndIndex)
{
	var sFirstHalf = "";
	var sSecondHalf = "";
	if (nStartIndex != this.getCookieNameIndex())
		sFirstHalf = this.getCookieStr().substring(0,nStartIndex);//this.getCookieNameIndex(),nStartIndex);
	if (nEndIndex != this.getCookieStr().length)
		sSecondHalf = this.getCookieStr().substring(nEndIndex,this.getCookieStr().length); 
	return  sFirstHalf + sSecondHalf; 
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	Get the index of the key from the cookie string 
needs:		sKey_gki = string that holds the key
			bIncludeLength = boolean. If true the length will also be returned. if
							false the length will not be included
returns:	an integer that holds the index of the key.
notes:		
*/
//--------------------------------------------------------------------------------
function getKeyIndex(sKey_gki,bIncludeLength)
{
	var nLength_gki = sKey_gki.length + 2;
	nIndex_gki = this.getCookieStr().toUpperCase().indexOf(this.keyDelim + sKey_gki.toUpperCase() + "=")
	if (nIndex_gki == -1)
		return nIndex_gki
	else
	{
		if (bIncludeLength)
			return nIndex_gki + nLength_gki;
		else
			return nIndex_gki;
	}
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	Get the Index of the next & after a certain point in the cookie
needs:		nKeyIndex_gai: number that has the starting point to search
returns:	integer of the next available '&'
			-1 if there is not an '&'
notes:		
*/
//--------------------------------------------------------------------------------
function getKeyDelimIndex(nKeyIndex_gai)
{
	return this.getCookieStr().indexOf(this.keyDelim,nKeyIndex_gai);
}

//--------------------------------------------------------------------------------
/*          function 
Purpose:	To reset the cookie	
needs:		nothing
returns:	nothing
notes:		
*/
//--------------------------------------------------------------------------------
function resetCookie()
{
	document.cookie = this.name + "=";
}

//--------------------------------------------------------------------------------
/*			function: ()
purpose:	
arguments:	
return:		
notes:	
*/
//--------------------------------------------------------------------------------
function doesKeyExist(sKey)
{
	if (this.getKeyIndex(sKey,false) > -1)
		return true
	else
		return false
}
//--------------------------------------------------------------------------------
/*			function: ()
purpose:	
arguments:	
return:		
notes:	
*/
//--------------------------------------------------------------------------------
/*
function addToKey(sKey,sValue)
{
	if (this.doesKeyExist(sKey))
	{
		sCurrentString = this.getKeyStr(sKey);
		sCurrentString += sValue
		
	}
	else
		return -1
}
*/
//--------------------------------------------------------------------------------
/*			function: ()
purpose:	
arguments:	
return:		
notes:	
*/
//--------------------------------------------------------------------------------
function removeKey(sKey)
{
//alert("removeKey(): doesKeyExist:"+this.doesKeyExist(sKey));
	if (this.doesKeyExist(sKey))
	{
		var nStartIndex = this.getKeyIndex(sKey,false);//don't include key length
		var nEndIndex = this.getKeyStr(sKey).length;
//alert("removeKey(): nStartIndex:"+nStartIndex + "\nnEndIndex="+nEndIndex);
		if (nStartIndex > -1)
		{
			sNewCookieString = this.getCookieStrWithoutKey(nStartIndex,nEndIndex);		
//alert("removeKey(): sNewCookieString:"+sNewCookieString);
			this.setCookie(sNewCookieString);
			return 1;
		}
	}
	return -1//error
}
function setPath(sPathString)
{
	document.cookie.path = sPathString
}
//-------------------------------------------------------------------------------
/*				end cookie class	
*/
//-------------------------------------------------------------------------------
 </script><script>
//#######################################################################################
//NOTE: 
//You must have a variable named nThisLDS and have it set to the correct LDS
//#######################################################################################
function setRefineValue(sValue)
{
	var searchCookie = new Cookie("searches");
	searchCookie.setCookieKey("refine" + nThisLDS,sValue);
}
</script>  
<script language=JavaScript>

var nSlotsLeft = 50;
var fnOldParentUnload;
function onClickRecord()
{
	//if(theCheckbox.checked)
	{
		//checking
		if(nSlotsLeft < 1)
		{
			alert(Translate("You have already reached the maximum number of records you may select.\nPlease download these records before selecting more"));
			//theCheckbox.checked = false;
		}else
		{
			nSlotsLeft--;
			window.open("", "window249270305", "location=no,menubar=no,innerheight=150,height=150,innerwidth=500,width=500" );
	
			//submit
			document.theForm.submit();
		}
		
	}/*else
	{
		//unchecking
		SelectedRecs[theCheckbox.name] = null;
		nSlotsLeft++;
	}*/
}

</script>

</head>


<body link="#003366" vlink="#996699" bgcolor="#ffffff" leftmargin="12" topmargin="12" marginwidth="12" marginheight="12" onLoad="document.ToHolding.reset()">
<form name="ToHolding" >
	
	
  <table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
	    <td nowrap valign="top" align="left" class="heading2">IGI Individual Record</td>
	    <td align="right" nowrap valign="top" class="headerText">FamilySearch&#153; International Genealogical Index
	      v5.0</td>
    </tr>
	  <tr>
	    <td>&nbsp;</td>
	    <td align="right" nowrap valign="top" class="headerText">British Isles</td>
	  </tr>
	  <tr>
		<td colspan="2">
			
			<a href="../ancestorsearchresults.asp?fn99=sarah&ln99=woodland&ffn99=&fln99=&mfn99=&mln99=&sfn99=&sln99=&ei99=0&td99=&fd99=1792&j199=Engl93&j299=&j399=&j499=&sdz99=&dr99=2&dri99=2&bn99=&sr99=&flmn99=&flen99=&sbn99=&Scn99=&r99=%2D1&rf99=&j1f99=England&j2f99=&j3f99=&j4f99=&LDS99=99&r_g99=&p_s_n99=&c_hfn99=&c_hln99=&c_s99=&c_c99=&c_t99=&c_r99=&c_rf99=&c_locf99=&c_nm99=&c_cd99=&LDS=1">Search Results</a>&nbsp;
			
				  |&nbsp;<a href="javascript:onClickRecord()"  >Download</a>
			
		</td>
	  </tr>	
  </table>

	<table border="0" cellpadding="0" cellspacing="0" width="100%">
	  <tr>
	    <td colspan="1"><hr noshade color="#000000">
	    </td>
	  </tr>
	  <tr>
		 
	      <td width="100%">
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
					<tr>
    <td width="1%"><IMG height=1 width=12 src="../../images/spacer.gif"></td>
    <td width="12%"><IMG height=1 width=1 src="../../images/spacer.gif"></td>
    <td><IMG height=1 width=1 src="../../images/spacer.gif"></td>
    <td><IMG height=1 width=1 src="../../images/spacer.gif"></td>
</tr>
<tr>
  <td colspan=3 class="individualName">Sarah Woodland</td>
  <td align="right"><A href="pedigree_view.asp?recid=100125294317&spouseid=&lds=1&region=2&frompage=99" class="pedigreeLinkFemale" title="Go to pedigree for this individual.">Pedigree</A></td>
</tr>
<tr>
	<td>&nbsp;</td>
	<td  class="individualData">Female</td>
 <td>&nbsp;</td>	<td>&nbsp;</td></tr>

			</table>
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
			<tr>
    <td width="1%"><IMG height=12 width=12 src="../../images/spacer.gif"></td>
    <td width="14%"><IMG height=1 width=1 src="../../images/spacer.gif"></td>
    <td><IMG height=1 width=1 src="../../images/spacer.gif"></td>
    <td><IMG height=1 width=1 src="../../images/spacer.gif"></td>
</tr>
<tr>
    <td colspan=4 class="individualHeading"><hr noshade color="#000000">Event(s):</td>
</tr>
<tr>
  <td width="1%"><IMG height=12 width=12 src="../../images/spacer.gif"></td>
  <td class="individualLabel" valign="top">Birth:&nbsp;</td>
  <td colspan=2><table border=0 cellpadding=0 cellspacing=0><tr>
  <td class="IndividualData" valign=top nowrap>About        1790&nbsp;&nbsp;</td>
  <td class="IndividualData" valign=top>Saint Decumans, Somerset, England</td>
  </tr></table></td>
</tr>
<tr>
  <td width="1%"><IMG height=12 width=12 src="../../images/spacer.gif"></td>
  <td class="individualLabel" valign="top">Christening:&nbsp;</td>
<tr>
  <td width="1%"><IMG height=12 width=12 src="../../images/spacer.gif"></td>
  <td class="individualLabel" valign="top">Death:&nbsp;</td>
<tr>
  <td width="1%"><IMG height=12 width=12 src="../../images/spacer.gif"></td>
  <td class="individualLabel" valign="top">Burial:&nbsp;</td>

			</table>
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
			
			</table>
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				
			</table>
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				
			</table>
			
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				
			</table>
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				
			</table>
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
			<tr>
	<td width="1%"><IMG height=12 width=12 src="../../images/spacer.gif"></td>
	<td><IMG height=1 width=1 src="../../images/spacer.gif"></td>
</tr>
<tr>
	<td colspan=2 class="individualHeading">	<hr noshade color="#000000">Messages:</td>
</tr>
<tr>
    <td><IMG height=1 width=1 src="../../images/invisible.gif"></td>
	<td width="100%" valign="top">Record submitted after 1991 by a member of the LDS Church. No additional information is available. Ancestral File may list the same family and the submitter.	</td>
</tr>
	
			</table>
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
			<tr>
    <td width="1%"><IMG height=12 width=12 src="../../images/spacer.gif"></td>
    <td width="10%"><IMG height=1 width=1 src="../../images/spacer.gif"></td>
    <td width="15%"><IMG height=1 width=1 src="../../images/spacer.gif"></td>
    <td width="10%"><IMG height=1 width=1 src="../../images/spacer.gif"></td>
    <td><IMG height=1 width=1 src="../../images/spacer.gif"></td>
</tr>
<tr>
	<td colspan=5 class="individualHeading"><hr noshade color="#000000">Source Information:</td>
</tr>
<tr>
	<td colspan=5>&nbsp; &nbsp;No source information is available.</td></tr>
	
			</table>
	</table>
	</td></tr>
	  <tr>
	    <td colspan="2"><hr noshade color="#000000">
	    </td>
	  </tr>
	 </table></td>
	  </tr>
	  <!--<tr>
	    <td colspan="2"><FONT COLOR=white>Gender: Female Birth: About        1790 Saint Decumans, Somerset, England</FONT>
	    </td>
	  </tr>--></table>
	  
	<table border="0" cellpadding="0" cellspacing="0" width="100%">
	  <tr>
	    <td>
<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor = "#6699cc">
  <tr valign="top">
    <td><img src="../../images/spacer.gif" width="8" height="1" alt=""></td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="0" cellpadding="2" bgcolor = "#336699">
  <tr valign="top" align="center">
    <td width="100%">
      <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr>
        
          <td width="111" valign="top"><a href="../../Redirects/RedirectCount.asp?page=http://www.lds.org" target="_top"><img src="../../images/church_logo_blue.gif" border="0" width="120" height="46" alt="The Church of Jesus Christ of Latter-day Saints"></a></td>
           
          <td width="5"><img src="../../images/spacer.gif" width="6" height="10" alt=""></td>
          <td width="55%"><p class="copyrightText" style="color: #cccccc;">
            <!-- FIGS_copyright_wording.inc -->
    &copy; 1999-2005 by Intellectual Reserve, Inc.&nbsp; All rights reserved.&nbsp; English approval: 3/1999<br>
    Use of this site constitutes your acceptance of these <a class="copyright" href="../../policy/FSI_terms.asp?color=dkBlue" target="_self" style="color: #cccccc;">Conditions of Use</a> (last updated:<br> 
    3/22/1999). 
    <a class="copyright" href="../../policy/FSI_privacy.asp?color=dkBlue" target="_self" style="color: #cccccc;">Privacy Policy</a> (last updated:
3/27/2006).&nbsp;&nbsp;&nbsp; 
28
    &nbsp;&nbsp;&nbsp;http://www.familysearch.org&nbsp;&nbsp;&nbsp;v.2.5.0

            </p></td>

          <td valign="top"><p style="color: #cccccc;"><a href="http://www.familysearch.org/eng/default.asp?page=/eng/Policy/about_us.asp" target="_top" class="copyrightBarAnchor">About
                Us</a> | <a href="http://www.familysearch.org/eng/home/faq/frameset_faq.asp?FAQ=https://www.familysearch.org/eng/Policy/contact_us.asp" target="_top" class="copyrightBarAnchor">Contact
              Us</a> | <a href="http://www.familysearch.org/eng/Home/News/frameset_news.asp?page=/eng/Home/News/home_press.asp" target="_top" class="copyrightBarAnchor">Press
              Room</a><br>
              <a href="http://www.familysearch.org/eng/default.asp?page=/eng/Policy/ldschurch_sites.asp" target="_top" class="copyrightBarAnchor">LDS
              Church Sites</a> | <a href="http://www.familysearch.org/eng/default.asp?page=/eng/Policy/countrysites.asp?color=green" target="_top" class="copyrightBarAnchor">LDS
          Country Sites</a></p></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor = "#003366">
  <tr valign="top">
    <td width="100%"><img src="../../images/spacer.gif" width="8" height="1" alt=""></td>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%" bgcolor = "#cccc99">
  <tr>
    <td><img border="0" src="../../images/spacer.gif" width="12" height="12" alt=""></td>
  </tr>
</table>
<!-- SiteCatalyst code version: G.7.Copyright 1997-2004 Omniture, Inc. More info available athttp://www.omniture.com -->
<script language="JavaScript">
<!--/* You may give each page an identifying name, server, and channel onthe next lines. */
var s_pageName=document.title
var s_server=""
var s_channel=""
var s_pageType=""

var s_prop1="User IP: 203.171.97.246, 10.73.1.4";
var s_prop2="User ID: ";
var s_prop3="User_Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"
var s_prop4="Third Party: ";
var s_prop5=""
/* E-commerce Variables */
var s_campaign=""
var s_state=""
var s_zip=""
var s_events=""
var s_products=""
var s_purchaseID=""
var s_eVar1=""
var s_eVar2=""
var s_eVar3=""
var s_eVar4=""
var s_eVar5=""
/********* INSERT THE DOMAIN AND PATH TO YOUR CODE BELOW ************///-->
</script>
<script language="JavaScript" src="../../includes/s_code_remote.js"></script><!-- End SiteCatalyst code version: G.7. -->		</td>
	  </tr>
	</table>


</form>
<form name="theForm" method=post action="../gedcom/SaveRecord.asp" target="window249270305">
<input type=hidden name="rec1" value="100125294317*2*Sarah Woodland*Gender: Female Birth: About        1790 Saint Decumans, Somerset, England">
<input type="hidden" name="LDS" id="LDS" value="1">
<input type="hidden" name="AdvanceToHoldingFile" id="AdvanceToHoldingFile" value="true">
</form>


</body>
<!-- ************************************************************************************
Programmer str...

-->


<!-- ************************************************************************************
errors... 
 -->
</html>	  

